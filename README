jConfigMap (See LICENSE AND NOTICE):
==========

Is a Java client configuration tool that uses Groovy (for now), to flatten
configuration files into a key-value Map structure. Each key and value are
stored as String values. Value retrieval is based upon applying regular
expressions across the Key set or Entry set. The matching values are then
returned in a new map. Or, if it is a simple key value property, then only
the matching value is returned.

Currently jConfigMap supports XML configuration files during startup and those
Map values are accessed statically by Java-Groovy binding class.

Examples (additional examples in test directory):
-------------------------------------------------
* 'xmlStructure' nodes always return a Map<String,String>
* 'keyValueProperties' nodes return a String, List, or primitive wrapped object
* 'value' attribute key stores the corresponding value in the config map

<config>
  <xmlStructure>
    <stocks>
        <stock name="FOO">
           <low>8.00</low>
           <high>8.32</high>
        </stock>
        <stock name="BAR">
           <low>4.50</low>
           <high>4.65</high>
        </stock>
    </stocks>
    <cities>
      <Chicago>
        <bars>
          <bar>Sheffields</bar>
          <bar>Map Room</bar>
          <bar>Redmonds</bar>
        </bars>
      </Chicago>
      <Ann Arbor>
        <bars>
          <bar>Grizzly Peak</bar>
        </bars>
      </Ann Arbor>
    </cities>
  </xmlStructure>
</config>

generates:
stocks.stock.foo.low, 8.00
stocks.stock.foo.high, 8.32
stocks.stock.bar.low, 4.50
stocks.stock.bar.high, 4.65

cities.chicago.bars.bar, Sheffields
cities.chicago.bars.bar.1, Map Room
cities.chicago.bars.bar.2, Redmonds
cities.ann arbor.bars.bar, Grizzly Peak

Pattern stocks = Pattern.compile(".*stocks.*");

ConfigLookup.get(stocks) --> 4 results
ConfigLookup.get(stocks, "FOO") --> 2 results
ConfigLookup.get(stocks, "low") --> 2 results
ConfigLookup.get(stocks, "FOO", "low") --> 1 result

Pattern bars = Pattern.compile(".*bars.*);
ConfigLookup.get(bars) --> 4 results
ConfigLookup.get(bars, "Chicago") --> 3 results

Requirements:
-------------
jdk 1.6
groovy 1.7.10
* built by gradle
