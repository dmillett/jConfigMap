//import groovy.sql.Sql

/**
 * Copyright 2011 David Millett
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.6
version=0.94

repositories {
  mavenCentral()
}

dependencies {

    compile 'org.codehaus.groovy:groovy-all:2.1.3'
    compile 'log4j:log4j:1.2.17'
    compile 'org.jyaml:jyaml:1.3'

    testCompile 'junit:junit:4.11'
    testCompile 'com.h2database:h2:1.3.171'
}


test  {

    //test.testLogging.showStandardStreams = true
    def basePath = new File('').absolutePath
    def testConfigPath = basePath + "/src/test/resources/config/"
    println "Setting Test Config Path To: ${testConfigPath}"

    systemProperties ['jConfigMap.location'] = "$testConfigPath"


}

//task h2_databaseSetup {
//
//    def sql2 = Sql.newInstance("jdbc:h2:mem:", "test", "", "org.h2.Driver")
//    sql2.execute("create table CONFIG (id int primary key, key varchar(50), value varchar(50))")
//    sql2.execute("insert into CONFIG values (1, 'db.one', '1'), (2, 'db.two', 'two'), (3, 'db.three', 'false')")
//
//    def insertedRows = sql2.rows("SELECT * FROM CONFIG")
//    assertEquals(3, insertedRows.size())
//}


